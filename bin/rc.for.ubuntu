#!/bin/sh 
#####################################################################
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#####################################################################
#
# noerp        This shell script takes care of starting and stopping
#              the NoERP subsystem. This version is for Ubuntu systems
#
# chkconfig: - 80 10
# description: NoERP server

# the userlogin the script should run under and is the home dirname, in this case /home/noerp/noerp
NOERPUSER="noerp"
NOERPDIR="noerp"

#============== no need to change anything below this line =======================

# Start NoERP
start() {
    if [ "$USER" = "" ]; then
        echo "Mounting data disk at boottime here"
#        mount /dev/sdg /data
    fi
    running
    if [ "$NOERP_PROCS" = "" ]; then
        echo "NoERP is already running..."
        return 0
    fi
    if [ "$USER" = "$NOERPUSER" ]; then
        echo "starting standard /home/$NOERPUSER/$NOERPDIR/bin/start"
        cd /home/$NOERPUSER/$NOERPDIR
        ./startnoerp.sh
        if [ $? = 0 ]; then 
            echo "start success"
        else
            echo "starting noerp user: $NOERPUSER in dir: $NOERPDIR failed return code: $?"
        fi
        return 0
    fi
}

stop() {
    if [ "$USER" = "$NOERPUSER" ]; then
        echo "stopping standard /home/$NOERPUSER/$NOERPDIR/bin/stop"
        cd /home/$NOERPUSER/$NOERPDIR
	    MAXCOUNT=10
        COUNTER=0
        until [ $COUNTER -gt $MAXCOUNT ]; do
             COUNTER=$((COUNTER+1))
             echo "Attempt number: $COUNTER"

            ./stopnoerp.sh
            if [ $? = 1 ]; then
                echo "stop success" 
                return 0
            fi
            sleep 3
        done
        echo "stopping noerp from user: $NOERPUSER failed after $MAXCOUNT attemps"
        return 1
    fi
}

#check for user, if wrong try to change to 'NOERPUSER' and re-execute.
checkUser() {
    if [ "$USER" != "$NOERPUSER" ]; then
        if [ "$USER" = "" ]; then
            exec su - $NOERPUSER -c "$0 $1 "
	    else
	        exec sudo -u $NOERPUSER $0 $1 
	    fi
        exit $?
    fi
}

# NoERP processes running
running() {
    NOERP_PROCS=`/bin/ps h -o pid,args -C java -u $NOERPUSER | /bin/grep -e "-jar noerp.jar" | /bin/egrep -o "^[[:space:]]*[[:digit:]]*"`
}

#========= main program ===============
checkUser $1
case "$1" in
    "start")
        start
    ;;
    "stop")
        stop
    ;;
    "restart")
        stop
        start
    ;;
    "status")
        running
        if [ "$NOERP_PROCS" = "" ]; then
            echo "NoERP for user: $NOERPUSER in dir: $NOERPDIR is stopped"
            exit 1
        else
            echo "NoERP for user: $NOERPUSER in dir: $NOERPDIR is running"
            exit 0
        fi
    ;;
    *)
        echo "Usage: $0 {start|stop|restart|status|help} not: $1"
        exit 1
    ;;
esac
exit $?

