#!/bin/bash
#####################################################################
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#####################################################################
#
# noerp        This shell script takes care of starting and stopping
#              the NoERP subsystem. This version is for Debian systems
#
# chkconfig: - 80 10
# description: NoERP server
### BEGIN INIT INFO
# Provides:          NoERP ERP software
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Apache-NoERP
# Description:       NoERP ERP Software
### END INIT INFO

# Paths - Edit for your locations
JAVA_BINARY=/usr/java/j2sdk1.4.2/bin/java
NOERP_HOME=/home/noerp/noerp
NOERP_LOG=$NOERP_HOME/runtime/logs/console.log

# VM Options
JAVA_VMOPTIONS="-Xms128M -Xmx512M -XX:MaxPermSize=512m"

# Java arguments
JAVA_ARGS="-jar noerp.jar"

# *nix user noerp should run as (you must create this user first)
NOERP_USER=noerp

# NoERP processes running
noerpprocs() {
    NOERP_PROCS=`/bin/ps h -o pid,args -C java | /bin/grep -e "$JAVA_ARGS" | /bin/egrep -o "^[[:space:]]*[[:digit:]]*"`
}

# Checking user...
checkuser() {
    if [ "$USER" != "$NOERP_USER" ]; then
        echo failure
        echo
        echo "Only users root or $NOERP_USER should start/stop the application"
        exit 1
    fi
}

# Start NoERP
start() {
    echo -n "Starting NoERP: "
    checkuser
    noerpprocs
    if [ "$NOERP_PROCS" != "" ]; then
        echo failure
        echo
        echo "NoERP is already running..."
        return 1
    fi

    # All clear
    cd $NOERP_HOME
    umask 007
    /bin/rm -f $NOERP_LOG
    $JAVA_BINARY $JAVA_VMOPTIONS $JAVA_ARGS >>$NOERP_LOG 2>>$NOERP_LOG&
    echo success
    return 0
}

# Stop NoERP
stop() {
    echo -n "Stopping NoERP: "
    checkuser
    noerpprocs
    if [ "$NOERP_PROCS" == "" ]; then
        echo failure
        echo
        echo "NoERP is not running..."
        return 1
    fi

    # All clear
    cd $NOERP_HOME
    umask 007
    $JAVA_BINARY $JAVA_VMOPTIONS $JAVA_ARGS -shutdown >>$NOERP_LOG
    noerpprocs
    if [ "$NOERP_PROCS" != "" ]; then
        # Let's try to -TERM
        /bin/kill -TERM $NOERP_PROCS
    fi
    noerpprocs
    if [ "$NOERP_PROCS" != "" ]; then
        # Let's try it the hard way!
        /bin/kill -9 $NOERP_PROCS
    fi
    noerpprocs
    if [ "$NOERP_PROCS" != "" ]; then
        echo failure
        echo
        echo "Some processes could not be stopped:"
        echo $NOERP_PROCS
        echo "A possible solution is to try this command once more!"
        return 1
    else
        echo success
        return 0
    fi
}

# If root is running this script, su to $NOERP_USER first
if [ "$USER" = "root" ]; then
    exec su - $NOERP_USER -c "$0 $1"
fi

case "$1" in
    'start')
        start
    ;;
    'stop')
        stop
    ;;
    'restart')
        stop
        start
    ;;
    'status')
        noerpprocs
        if [ "$NOERP_PROCS" == "" ]; then
            echo "NoERP is stopped"
            exit 1
        else
            echo "NoERP is running"
            exit 0
        fi
    ;;
    *)
        echo "Usage: $0 {start|stop|kill|restart|status|help}"
        exit 1
    ;;
esac
echo
exit $?

